先序遍历思想，具体什么是原地展开还是不太清楚，是从图像上发现的
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*>vec;
    void preorder(TreeNode* root)
    {  
        if(root!=nullptr)
       { vec.push_back(root);
        preorder(root->left);
        preorder(root->right);

       }
    }
    void flatten(TreeNode* root) {
      preorder(root);
      TreeNode* r=root;
      if (root==nullptr)
        return;//特殊情况，之前没有过就是因为它，因为下面的判断默认了 
      for(int i=0;i<vec.size()-1;i++)
      { if(r!=nullptr)
        { r->left=nullptr;
         r->right=vec[i+1];
         r=r->right;}
      } 
    }
};
