/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>&inorder, vector<int>&postorder) {
  
    if(inorder.empty())  
      return NULL;
      int rootvalue=postorder.back();
      
      TreeNode* root=new TreeNode (rootvalue);
      if(inorder.size()==1)  return root;//简化一部分时间
    int rootIninorder; 
    for(int i=0;i<postorder.size();i++)
    {
        if(inorder[i]==postorder.back())
        {
             rootIninorder=i;
             break;
        }
    }
     vector<int> leftinorder(inorder.begin(),inorder.begin()+rootIninorder);
     vector<int> rightinorder(inorder.begin()+rootIninorder+1,inorder.end());
     vector<int> leftpostorder(postorder.begin(),postorder.begin()+rootIninorder);    
     vector<int> rightpostorder(postorder.begin()+rootIninorder,postorder.end()-1);
    root->left=buildTree(leftinorder,leftpostorder);
    root->right=buildTree(rightinorder,rightpostorder);
    return root;
    }
};
